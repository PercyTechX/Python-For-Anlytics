# -*- coding: utf-8 -*-
"""05_Introducción_a_Seaborn.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1i6CYcMmwxSr3h6X_T1flj2fU-AG3An0X

# **Gráficas con Seaborn**
"""

!pip install seaborn

import seaborn as sns

!pip install pydataset

from pydataset import data

iris = data("iris")

iris.sample(7)

"""# **Barplot**"""

import numpy as np
import matplotlib.pyplot as plt

# Quiero realizar una visualización que me entregue el promedio de Sepal Lenght según tipo de flor

sns.barplot(x="Species",y="Sepal.Length",data=iris,estimator=np.mean)

"""# **Histograma**"""

sns.displot(iris["Sepal.Length"])

"""# **KDE Plot (Kernel Density Estimation Plots)**"""

sns.kdeplot(data = iris["Sepal.Length"])

sns.kdeplot(data = iris["Sepal.Length"], shade = True)

"""# **Boxplot**"""

sns.boxplot(y=iris["Sepal.Length"]) # Gráfica de cajas univariada

# Gráfica de cajas bivariada

sns.boxplot(data=iris,x="Species", y ="Sepal.Length")

sns.boxplot(data=iris, x="Sepal.Length", y="Species", orient="h")

sns.boxplot(x=iris["Sepal.Length"], color="green")

"""# **Violinplot**"""

sns.violinplot(x=iris["Sepal.Length"], color="green")

sns.violinplot(data=iris, x="Species", y="Sepal.Length")

"""# **Catplot**"""

sns.catplot(data=iris, x="Species", y = "Sepal.Length")

"""# **Scatter Plots**"""

sns.scatterplot(x="Sepal.Length",y="Sepal.Width",data=iris)

sns.scatterplot(x="Sepal.Length",y="Sepal.Width",data=iris,hue="Species")

"""# **Histogramas y funciones de densidad**"""

sns.histplot(iris["Sepal.Length"],kde=True)

sns.histplot(iris["Sepal.Length"],kde=True, bins=20, color ="orange")

sns.kdeplot(iris["Sepal.Length"],shade=True, color ="green")

sns.kdeplot(iris["Sepal.Length"],shade=True, color ="green")
plt.axhline(y=0.25)
plt.axvline(x=6)

"""# **Profundizando en gráficas bivariadas**"""

sns.jointplot(x=iris["Sepal.Length"],y=iris["Sepal.Width"])

sns.jointplot(x=iris["Sepal.Length"], y=iris["Petal.Length"],kind="reg")

sns.jointplot(x=iris["Sepal.Length"], y=iris["Petal.Length"],hue=iris["Species"])

"""# **Gráficas Multivariadas**"""

sns.pairplot(iris)

sns.pairplot(iris,hue="Species")

sns.heatmap(iris.corr())

sns.heatmap(iris.corr(),annot=iris.corr())

"""# **Actividad**

Reto: 30 minutos por grupo para realizar todas las visualizaciones que consideren relevantes con la siguiente base de datos indicadas y agregar breves interpretaciones con los resultados:
"""

pinguinos = sns.load_dataset("penguins")

pinguinos.head(8)

"""

*   Species: Especie del pinguino
*   Island: Isla de procendencia de la especie
*   Bill length: Longitud del pico del pinguino
*   Bill depth: Profundidad del pico del pinguino
*   Flipper length: Longitud del ala del pinguino
*   Body Mass: Masa Corporal del pinguino
*   Sex: Genero

"""

